input {
    tcp{
            port=> 9600
            host=>localhost
        }
}
; filter {
;   grok {
;     match => [ "message",
;                "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>[A-Za-z0-9-]+)\] [A-Za-z0-9.]*\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
;                "message",
;                "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
;              ]
;   }
;   date {
;     match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
;   }
; }
; output {
     output {
        stdout {

        }
;     }
; 	elasticsearch {
; 		hosts => elasticsearch
; 		manage_template => false
;     	index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
; 	}

; input {
;     file {
;         path => "/home/vitalii/Documents/A.csv"
;         start_position => "beginning"
;         sincedb_path => 'nul'
;         codec => "json"
;    }
; }
; filter {
;     csv {
;         columns => ['date', 'volume', 'open', 'close', 'high', 'low', 'adjclose']
;         separator => ","
;     }
;     mutate {
;             "date" => "[stock_quote][date]"
;             "volume" => "[stock_quote][volume]"
;             "open" => "[stock_quote][open]"
;             "close" => "[stock_quote][close]"
;             "high" => "[stock_quote][high]"
;             "low" => "[stock_quote][low]"
;             "adjclose" => "[stock_quote][adjclose]"
;         }
;     }
; output {
;      	elasticsearch {
;      		hosts => elasticsearch
;      		manage_template => false
;         	index => "stock_quote"
;      	}
; }
; output {
;     stdout {
;         codec => json{}
;     }
; }
