buildscript {
    project.ext {
        springBootVersion = '2.0.4.RELEASE'
        springCloudVersion = '2020.0.4'
        versionName = '0.0.1'
        gradleDockerVersion = '1.2'
        swagger2version = '2.9.2'
    }
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/libs-snapshot-local" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.5.31"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.5.31'
        classpath 'org.jetbrains.kotlin:kotlin-maven-plugin:1.5.31'
    }
}
repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
    mavenLocal()
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven { url = uri('https://repo.spring.io/libs-snapshot-local') }
    maven { url = uri('https://repo.spring.io/libs-milestone-local') }
    maven { url = uri('https://packages.confluent.io/maven/') }
    maven { url = uri('https://repo.spring.io/release') }

}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.4"
    }
}
dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.data:spring-data-mongodb'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.h2database:h2:1.4.199'

    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    implementation (project (':security-autoconfig'))

    implementation('org.mapstruct:mapstruct:1.3.0.Beta2')
    compileOnly('org.mapstruct:mapstruct-processor:1.3.0.Beta2')
    annotationProcessor('org.mapstruct:mapstruct-processor:1.3.0.Beta2')

    testImplementation 'io.projectreactor:reactor-test:3.3.11.RELEASE'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}
