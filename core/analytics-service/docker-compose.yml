version: "2"
networks:
  kafka-net:
    driver: bridge
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    networks:
          - kafka-net
    container_name: bootiful-dress-zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:latest
    networks:
      - kafka-net
    container_name: bootiful-dress-kafka
    ports:
      - 9092:9092
    environment:
       KAFKA_ADVERTISED_HOST_NAME: kafka
#       KAFKA_HOST_NAME: localhost
       KAFKA_ADVERTISED_PORT: 9092
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
#       KAFKA_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
       KAFKA_CREATE_TOPICS: dresses:1:1,ratings:1:1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper

#  zookeeper:
#      image: confluentinc/cp-zookeeper:5.0.0
#      volumes:
#        - ~/dev/data/zk-data:/var/lib/zookeeper/data
#        - ~/dev/logs/zk-txn-logs:/var/lib/zookeeper/log
#      environment:
#        - ZOOKEEPER_CLIENT_PORT=2181
#      ports:
#        - 2181:2181
#  kafka:
#    image: confluentinc/cp-kafka:5.0.0
#    volumes:
#      - ~/dev/data/kafka-data:/var/lib/kafka/data
#    environment:
#      - KAFKA_BROKER_ID=1
#      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
#      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#    links:
#      - zookeeper
#    ports:
#      - 9092:9092
#  schema-registry:
#    image: confluentinc/cp-schema-registry:5.0.0
#    environment:
#      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
#      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
#      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
#      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka:9092
#    links:
#      - zookeeper
#      - kafka
#    ports:
#      - 8079:8081
#  zookeeper:
#      networks:
#        - kafka-net
#      image: wurstmeister/zookeeper
#      ports:
#      - "2181:2181"
#  kafka:
#      image: wurstmeister/kafka
#      networks:
#        - kafka-net
#      ports:
#      - "9092:9092"
#      environment:
#        KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
#        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  dress-service:
    networks:
          - kafka-net
    container_name: bootiful-dress-service
    #    build: build/docker
    build:
      context: ./
      dockerfile: Dockerfile
#    image: cristinatech/spring-cloud-stream-kafka
    depends_on: # baking services will be started before the bootiful-dress-service
      - kafka
    ports:
      - "9000:9000"
      - "8081:8081"
      - "5005:5005"

    environment: # docker run -e "SPRING_PROFILES_ACTIVE=docker -e "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n" -p 9000:9000 -p 8081:8081 -p 5005:5005 -t cristinatech/spring-cloud-stream-kafka
      - SPRING_PROFILES_ACTIVE=docker
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,address=5005