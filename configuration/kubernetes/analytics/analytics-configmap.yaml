apiVersion: v1
kind: ConfigMap
metadata:
  name: analytics
  namespace: kafka
data:
  application.yml: |-
    
    spring:
      cloud: 
        stream:
          function.definition: "process"
          bindings:
            process-in-0:
              destination: "quote"
            process-out-0:
              destination: "quote-aggregation"
              producer:
                useNativeEncoding: "true"
          kafka:
            binder:
              brokers: "my-kafka-cluster-kafka-bootstrap:9092"
            bindings:
              process-in-0:
                consumer:
                  configuration:
                    schema.registry.url: "http://strimzi-registry-operator:8081"
                    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                    value.deserializer: com.investment.serializer.SensorDeserializer
              process-out-0:
                producer:
                  configuration:
                    schema.registry.url: "http://strimzi-registry-operator:8081"
                    key.serializer: org.apache.kafka.common.serialization.StringSerializer
                    value.serializer: com.investment.serializer.SensorSerializer
            streams:
              binder:
                brokers: "my-kafka-cluster-kafka-bootstrap:9092"
              configuration:
                schema.registry.url: "http://strimzi-registry-operator:8081"
              specific.avro.reader: "true"
  
              bindings:
                process-out-0:
                  producer:
                    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                    valueSerde: com.investment.serde.SensorSerde
  
                process-in-0:
                  consumer:
                    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                    valueSerde: com.investment.serde.SensorSerde
    security.basic.enabled: "false"
    server.port: "9998"
                    
