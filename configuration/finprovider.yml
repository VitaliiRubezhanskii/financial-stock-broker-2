#spring.application.name: finprovider
#spring.kafka:
#  properties:
#    bootstrap-servers: localhost:9092
    #properties.allow.auto.create.topics: true
    #sasl.mechanism: PLAIN
    #sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${username}' password='${password}';
    #security.protocol: SASL_SSL

    #basic.auth.credentials.source: USER_INFO
    #basic.auth.user.info: 4JYXYBS7AXSTQRFG:Sw4ib3vEDg4lmHFcB7p7EMsMHUiaqQkQFJHC7J5fmPXDkB3TfHPiXVWMoHyfg/qc
 #   schema.registry.url: http://localhost:8081
spring:
#  kafka:
#    properties:
#      bootstrap-servers: localhost:9092
#      schema.registry.url: http://localhost:8081
  cloud:
    function.definition: process
    stream:
      default.contentType: application/*+avro
      bindings:
        process-out-0:
          destination: quote
          producer:
            useNativeEncoding: true

      kafka:
        binder:
          brokers: localhost:9092
        bindings:
          process-out-0:
            producer:
              configuration:
                schema.registry.url: http://localhost:8081
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                value.serializer: com.investment.serde.SensorSerde
               
        #streams:
        #  binder:
        #    configuration:
        #      schema.registry.url: http://localhost:8081
        #      key.serializer: org.apache.kafka.common.serialization.LongSerializer
        #      value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
        #  bindings:
        #    process-out-0:
        #      producer:
        #        keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
        #        valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerdes



  datasource:
    url: jdbc:postgresql://localhost:5432/quotes_provider
    password: postgres
    username: postgres
    driverClassName: org.postgresql.Driver
    hikari:
      connectionTimeOut: 2000
      maximumPoolSize: 5
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    hibernate.ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        temp.use_jdbc_metadata_defaults: false
  flyway:
    enabled: false
    validate-on-migrate: false

eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2

  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5

management:
  security:
    enabled: false

server:
  port: 9010
