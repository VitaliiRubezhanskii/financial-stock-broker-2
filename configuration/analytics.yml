server.port: 9998
spring.application.name: analytics
spring.kafka:
  properties:
    bootstrap-servers: pkc-4ygn6.europe-west3.gcp.confluent.cloud:9092
    properties.allow.auto.create.topics: true
    sasl.mechanism: PLAIN
    sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username='' password='';
    security.protocol: SASL_SSL
    
    basic.auth.credentials.source: USER_INFO
    basic.auth.user.info: 4JYXYBS7AXSTQRFG:Sw4ib3vEDg4lmHFcB7p7EMsMHUiaqQkQFJHC7J5fmPXDkB3TfHPiXVWMoHyfg/qc
    schema.registry.url: https://psrc-2312y.europe-west3.gcp.confluent.cloud
spring:
  cloud:
    stream:
      function.definition: process
      bindings:
        publish-out-0:
          destination: quote
          producer:
            use-native-encoding: true
        process-in-0:
          destination: quote
        process-out-0:
          destination: quote-aggregation
          producer:
            use-native-encoding: true
          
   
      kafka:
        binder:
          #replicationFactor: 1
          #minPartitionCount: 3
          brokers: pkc-4ygn6.europe-west3.gcp.confluent.cloud:9092
          #defaultBrokerPort: 9092
        bindings:
          process-in-0:
            consumer:
              configuration:
                schema.registry.url: https://psrc-2312y.europe-west3.gcp.confluent.cloud
                basic.auth.credentials.source: USER_INFO
                basic.auth.user.info: 4JYXYBS7AXSTQRFG:Sw4ib3vEDg4lmHFcB7p7EMsMHUiaqQkQFJHC7J5fmPXDkB3TfHPiXVWMoHyfg/qc
                key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
                value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                #io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
                # io.confluent.kafka.serializers.KafkaAvroDeserializer
                # com.investment.serde.QuoteAvroSerializer
                # io.confluent.kafka.serializers.KafkaAvroDeserializer
                
          process-out-0:
            producer:
              configuration:
                schema.registry.url: https://psrc-2312y.europe-west3.gcp.confluent.cloud
                basic.auth.credentials.source: USER_INFO
                basic.auth.user.info: 4JYXYBS7AXSTQRFG:Sw4ib3vEDg4lmHFcB7p7EMsMHUiaqQkQFJHC7J5fmPXDkB3TfHPiXVWMoHyfg/qc
                key.serializer: org.apache.kafka.common.serialization.StringSerializer
                value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                #org.apache.kafka.common.serialization.IntegerSerializer
                # com.investment.serde.QuoteAvroSerializer
  
        streams:
          binder:
            brokers: pkc-4ygn6.europe-west3.gcp.confluent.cloud
            configuration:
              schema.registry.url: https://psrc-2312y.europe-west3.gcp.confluent.cloud
              basic.auth.credentials.source: USER_INFO
              basic.auth.user.info: 4JYXYBS7AXSTQRFG:Sw4ib3vEDg4lmHFcB7p7EMsMHUiaqQkQFJHC7J5fmPXDkB3TfHPiXVWMoHyfg/qc
              specific.avro.reader: true
          bindings:                
            process-out-0:
              producer:
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: com.investment.serde.QuoteSerde
                #org.apache.kafka.common.serialization.Serdes$IntegerSerde
            process-in-0:
              consumer:
                keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
                valueSerde: com.investment.serde.QuoteSerde
                #org.apache.kafka.common.serialization.Serdes$ByteArraySerde
                #com.investment.serde.QuoteSerde



eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2

  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5

management:
  security:
    enabled: false
