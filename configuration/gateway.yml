spring:
  cloud:
    gateway:
      routes:
        - id: account-service
          uri: http://localhost:8093
          predicates:
           - Path=/account/**
        - id: order-service
          uri: http://localhost:8092
          predicates:
           - Path=/order/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
            - TokenRelay=
            - SaveSession
            - StripPrefix=1

  security:
    oauth2:
      client:
        registration:
          keycloak-spring-gateway-client:
            provider: my-keycloak-provider
            client-id: spring-gateway-client
            client-secret: 3RhEF8pqKTANrQ6BhfxaYVmcjTXsDK0u
            authorization-grant-type: authorization_code
            scope: openid
            redirect-uri: http://localhost:8080/login/oauth2/code/keycloak
        provider:
          my-keycloak-provider:
            issuer-uri: http://localhost:8080/realms/My-Realm
            token-uri: http://localhost:8080/realms/My-Realm/protocol/openid-connect/token
            jwk-set-uri: http://localhost:8080/realms/My-Realm/protocol/openid-connect/certs
            authorization-uri: http://localhost:8080/realms/My-Realm/protocol/openid-connect/auth
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/My-Realm


eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5

management:
  endpoints:
    web:
      exposure:
        include: routes

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 15000

  eureka:
    enabled: true
security.basic.enabled: false
