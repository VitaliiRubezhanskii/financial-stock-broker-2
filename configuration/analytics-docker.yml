server.port: 9998
spring.application.name: analytics
spring.kafka.properties.schema.registry.url: http://schema-registry:8081
spring.cloud.stream.bindings.process-out-0:
  destination: quote-aggregation
  contentType: application/*+avro
  producer:
    keySerde: com.investment.serde.QuoteSerde
    valueSerde: com.investment.serde.QuoteSerde
    
spring.cloud.stream.bindings.process-in-0:
  destination: quote
  contentType: application/*+avro
  consumer:
    keySerde: org.apache.kafka.common.serialization.Serdes$StringSerde
    valueSerde: com.investment.serde.QuoteSerde
spring.cloud.stream.kafka.streams.binder:
    brokers: broker
    replicationFactor: 1
    partitionCount: 4
    configuration:
      schema.registry.url: http://schema-registry:8081
      commit.interval.ms: 1000
      key.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
      value.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
    producer-properties:
       key.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
       value.serializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
       schema.registry.url: http://schema-registry:8081
    consumer-properties:
       key.deserializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
       value.deserializer: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerializer
       schema.registry.url: http://schema-registry:8081
       specific.avro.reader: true


eureka:
  instance:
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2

  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5

management:
  security:
    enabled: false
