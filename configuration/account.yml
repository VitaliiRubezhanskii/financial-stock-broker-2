spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/quotes_provider
    password: postgres
    username: postgres
    driverClassName: org.postgresql.Driver
    hikari:
      connectionTimeOut: 2000
      maximumPoolSize: 5
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    hibernate.ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        temp.use_jdbc_metadata_defaults: false      
  security:
    oauth2:
      client:
        registration:
          account:
            client-id: account
            client-secret: e549e738-d8e4-4cbd-8381-fc8dcc8194d5
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8093/account
            scope: openid,profile,roles
        provider:
          account:
            issuer-uri: http://localhost:8080/login/oauth2/code/account
  zipkin:
    enabled: true
    baseUrl: http://localhost:9411
  sleuth:
    sampler:
      probability: 100
      

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    healthcheck:
      enabled: true
    register-with-eureka: true
    fetch-registry: true
    
#security:
#    client:
#      clientId: account
#      clientSecret: 1234
#      accessTokenUri: http://localhost:9000/uaa/oauth/token
#      grant-type: client_credentials
#      scope: server
#    resource:
#       user-info-uri: http://localhost:9000/uaa/user/current
#       token-info-uri: http://localhost:9000/uaa/oauth/check_token


microservice:
  client:
    url: http://localhost:8099

keycloak:
  enabled: true
  realm: broker
  auth-server-url: http://localhost:8080/auth
  ssl-required: none
#keycloak resource is the client ID
  resource: broker
  use-resource-role-mappings: true
#The line below will prevent redirect to login page
  bearer-only: true
