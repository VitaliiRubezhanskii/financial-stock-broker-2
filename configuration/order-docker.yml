spring.data.mongodb.uri: mongodb://mongo1:27017,mongo2:27017,mongo3:27017/order?replicaSet=rs0

security.oauth2:

    client:
      clientId: order
      clientSecret: 1234
      accessTokenUri: http://auth:8084/uaa/oauth/token
      grant-type: client_credentials
      scope: server

    resource:
      user-info-uri: http://auth:8084/uaa/user/current
      token-info-uri: http://auth:8084/uaa/oauth/check_token


spring:
  cloud:
    stream:
         producer:
          useNativeEncoding: true
         consumer:
          useNativeEncoding: true
      bindings:
        process-in-0:
          destination: orders
          content-type: application/*+avro
        process-out-0:
          destination: orders
          content-type: application/*+avro
          group: group-1
          concurrency: 3
      kafka:
          binder:
           producer-properties:
             key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
             value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
             schema.registry.url: http://schema-registry:8081
           consumer-properties:
             key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
             value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
             schema.registry.url: http://schema-registry:8081
             specific.avro.reader: true
           brokers: broker