apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongocustom
          image: mongocustom:latest
          command: ["/bin/sh"]
          args: ["-c", "mongoimport --host 10.100.70.27 --db auth --collection user --type json --file /user.json --jsonArray"]
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
          imagePullPolicy: Never
          volumeMounts:
            - name: mongo-persistent-storage2
              mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage2
          hostPath:
            path: /mongodb
          # pointer to the configuration of HOW we want the mount to be implemented
#          persistentVolumeClaim:
#            claimName: mongo-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  storageClassName: mylocalstorage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
# How do we want it implemented
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-storage2
spec:
  storageClassName: mylocalstorage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mongodb-data"
    type: DirectoryOrCreate