import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

buildscript {
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
		maven { url = uri('https://packages.confluent.io/maven/') }
		maven { url = uri('https://repo.spring.io/release') }
		maven { url = uri('https://repo.maven.apache.org/maven2/') }
	}
	dependencies {
		classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.2"


	}
}
plugins {
//	id 'org.springframework.boot'
//	version '2.5.6'
//	id 'io.spring.dependency-management'
//	version '1.0.11.RELEASE'
	id 'java'
	id 'idea'
}

group = 'com.investment.kafka'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	maven { url "https://plugins.gradle.org/m2/" }
	maven { url = uri('https://packages.confluent.io/maven/') }
	maven { url = uri('https://repo.spring.io/release') }
	maven { url = uri('https://repo.maven.apache.org/maven2/') }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

apply plugin: "com.commercehub.gradle.plugin.avro-base"


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2020.0.3"
	}
}
dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation 'org.apache.avro:avro:1.8.2'
	implementation ('io.confluent:kafka-streams-avro-serde:5.3.0') {
		exclude(module: 'log4j-over-slf4j')
	}

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	implementation 'org.apache.kafka:kafka-streams:2.7.1'

}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}

sourceSets {
	main {
		java {
			srcDir 'build/generated-sources/avro'
		}
	}
}

clean {
	delete('src/main/java/com/investment/kafka/prodcons/avro')
}
test {
	useJUnitPlatform()
}
