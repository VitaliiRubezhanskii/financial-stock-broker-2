import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.3.0'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

repositories {
	maven { url { 'https://packages.confluent.io/maven' }}
}

apply plugin: 'java'
apply plugin: 'com.github.davidmc24.gradle.plugin.avro'


dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Kafka
	implementation 'org.apache.avro:avro:1.11.0'
	implementation 'io.confluent:kafka-streams-avro-serde:5.3.0'
	implementation 'io.confluent:kafka-avro-serializer:5.3.0'
	implementation 'io.confluent:kafka-schema-registry-client:7.4.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

def generateAvro = tasks.register("generateAvro", GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("src/main/java")
}

tasks.named("compileJava").configure {
	source(generateAvro)
}

sourceSets {
	main {
		java {
			srcDir 'build/generated-sources/avro'
		}
	}
}

clean {
	delete('src/main/java/com/investment/kafka/prodcons/avro')
}
test {
	useJUnitPlatform()
}
