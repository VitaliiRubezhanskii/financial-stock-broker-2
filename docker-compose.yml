version: "3"
networks:
    my-mongo-cluster:
      driver: bridge
services:
   mongo1:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27018:27017
#      volumes:
#        - /etc/localtime:/etc/localtime:ro
#        - /mongo_cluster/data1:/data/db
      networks:
        - my-mongo-cluster
   mongo2:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27019:27017
#      volumes:
#        - /etc/localtime:/etc/localtime:ro
#        - /mongo_cluster/data2:/data/db
      networks:
        - my-mongo-cluster
      depends_on:
        - mongo1
   mongo3:
      image: mongo:4.1.13-bionic
      command: --replSet rs0 --bind_ip_all
      ports:
        - 27020:27017
#      volumes:
#        - /etc/localtime:/etc/localtime:ro
#        - /mongo_cluster/data3:/data/db
      networks:
        - my-mongo-cluster
      depends_on:
       - mongo1
       - mongo2
   mongo-replicator:
      build:
        context: ./
        dockerfile: ./mongodb/Dockerfile
      networks:
        - my-mongo-cluster
      depends_on:
        - mongo1
        - mongo2
        - mongo3

   config_service:
       container_name: config_service
       ports:
        - 8888:8888
       healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:8888/account-service/dev"]
         interval: 30s
         timeout: 10s
         retries: 5
       image: config_service:latest
       build:
         context: ./support/config
         dockerfile: Dockerfile
       depends_on:
         - mongo-replicator
         - discovery_service
       environment:
             - JAVA_OPTS=
               -DEUREKA_SERVER=http://discovery_service:8761/eureka
               -Dspring.cloud.config.server.native.searchLocations=/var/configuration
       restart: always
       networks:
        - my-mongo-cluster

   discovery_service:
      container_name: discovery_service
      ports:
       - 8761:8761
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8761"]
        interval: 30s
        timeout: 10s
        retries: 5
      image: discovery_service:latest
      build:
        context: ./support/monitoring
        dockerfile: Dockerfile
      restart: always
      networks:
       - my-mongo-cluster

   order_service:
      container_name: order_service
      ports:
       - 8082:8082
      healthcheck:
         test: ["CMD", "curl", "-f", "http://localhost:8081"]
         interval: 30s
         timeout: 10s
         retries: 5
      image: order_service:latest
      build:
        context: ./core/order-service
        dockerfile: Dockerfile
      depends_on:
           - mongo-replicator
           - discovery_service
           - config_service
      environment:
          CONFIG_SERVER: http://config_service:8888
          EUREKA_SERVER: http://discovery_service:8761/eureka

      restart: always
      networks:
        - my-mongo-cluster

   account_service:
      container_name: account_service
      expose:
       - 8081
      ports:
       - 8081:8081
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8082"]
        interval: 30s
        timeout: 10s
        retries: 5
      image: account_service:latest
      build:
        context: ./core/account-service
        dockerfile: Dockerfile
      depends_on:
          - mongo-replicator
          - discovery_service
          - config_service
      environment:
         - JAVA_OPTS=
           -DEUREKA_SERVER=http://discovery_service:8761/eureka
      restart: always
      networks:
        - my-mongo-cluster

   api_gateway_service:
      container_name: api_gateway_service
      expose:
       - 5000
      ports:
       - 5000:5000
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:5000"]
        interval: 30s
        timeout: 10s
        retries: 5
      image: api_gateway_service:latest
      build:
        context: ./support/monitoring
        dockerfile: Dockerfile
      restart: always
      networks:
       - my-mongo-cluster